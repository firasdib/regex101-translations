{
  "'{0}' found at index {1}": "'{0}' funnen på index {1}",
  "(*ANY) makes it so that any unicode newline character or sequence thereof counts as a line break.": "(*ANY) gör så att alla unicode radbrytstecken or sekvenser av sådana tecken räknas som ett radbrytstecken.",
  "(*ANYCRLF) makes it so that either a carriage return character or a line feed character, or the two in sequence are considered a line break.": "(*ANYCRLF) makes it so that either a carriage return character or a line feed character, or the two in sequence are considered a line break.",
  "(*CR) makes it so that only a carriage return character is considered a line break.": "(*CR) makes it so that only a carriage return character is considered a line break.",
  "(*CRLF) makes it so that only a carriage return character followed by a line feed character is considered a line break. Common in Windows documents.": "(*CRLF) makes it so that only a carriage return character followed by a line feed character is considered a line break. Common in Windows documents.",
  "(*FAIL) or (*F) is a synonym for (?!), and it allows you to force a matching failure at a specific point in the regex.": "(*FAIL) or (*F) is a synonym for (?!), and it allows you to force a matching failure at a specific point in the regex.",
  "(*LF) makes it so that only a line feed character is considered a line break. Common in UNIX documents.": "(*LF) makes it so that only a line feed character is considered a line break. Common in UNIX documents.",
  "(*LIMIT_MATCH=x) where x is the number of times the regex engine is allowed to call match(). This user set limit cannot be increased past the compile time value or the default, however it can be restricted.": "(*LIMIT_MATCH=x) where x is the number of times the regex engine is allowed to call match(). This user set limit cannot be increased past the compile time value or the default, however it can be restricted.",
  "(*LIMIT_RECURSION=d) at the start of a pattern will limit the regex engine to 'd' number of recursions when matching. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.": "(*LIMIT_RECURSION=d) at the start of a pattern will limit the regex engine to 'd' number of recursions when matching. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.",
  "(*MARK:NAME) or (*:NAME) is used to track how a match was arrived at. Name is always required, but it doesn't need to be unique. When used in conjunction with the /K modifier, pcretest can return the mark together with a successful match.": "(*MARK:NAME) or (*:NAME) is used to track how a match was arrived at. Name is always required, but it doesn't need to be unique. When used in conjunction with the /K modifier, pcretest can return the mark together with a successful match.",
  "(*PRUNE) or (*PRUNE:NAME) will cause the regex to exit if it tries to backtrack past its position. This is useful when looking to cut down on backtracking at specific points in the regex. The example above would normally match both terms but due to (*PRUNE) the second alternative is not acted on.": "(*PRUNE) or (*PRUNE:NAME) will cause the regex to exit if it tries to backtrack past its position. This is useful when looking to cut down on backtracking at specific points in the regex. The example above would normally match both terms but due to (*PRUNE) the second alternative is not acted on.",
  "(*SKIP) or (*SKIP:NAME) will cause the regex to give up on the current match if it tries to backtrack past its position. This is useful when looking to cut down on backtracking at specific points in the regex.": "(*SKIP) or (*SKIP:NAME) will cause the regex to give up on the current match if it tries to backtrack past its position. This is useful when looking to cut down on backtracking at specific points in the regex.",
  "(*THEN) or (*THEN:NAME) allows one to cut down on backtracking within an alternation. It won't allow regex to backtrack past its position, and it will give up matching the current alternation if there's a failure. If (*THEN) is used outside of an alternation, it will act like (*PRUNE).": "(*THEN) or (*THEN:NAME) allows one to cut down on backtracking within an alternation. It won't allow regex to backtrack past its position, and it will give up matching the current alternation if there's a failure. If (*THEN) is used outside of an alternation, it will act like (*PRUNE).",
  "(except for line terminators)": "(förutom för radbrytstecken)",
  "{1} — Matches between {2} and {3} times, {4} {5}": "{1} — Matchar mellan {2} och {3} gånger, {4} {5}",
  "{1} — Matches exactly {2} {3} {4}": "{1} — Matchar exakt {2} {3} {4}",
  "{1} Alternative": "{1} Alternativet",
  "{1} and {2} are also available with the use of '{3}'": "{1} och {2} finns även tillgänglig med användning av '{3}'",
  "{1} Capturing Group": "{1} Minnesgrupp",
  "{1} checks whether the {2} capturing group matched when it was last attempted": "{1} kollar huruvida den {2} bevarande gruppen matchade senast den påträffades",
  "{1} checks whether the {2} subroutine matches": "{1} kollar huruvida den {2} subrutinen matchar",
  "{1} checks whether the whole pattern matches": "{1} kollar huruvida hela uttrycket matchar",
  "{1} match": "{1} match",
  "{1} matches": "{1} träffar",
  "{1} modifier:": "{1} modifierare:",
  "{1} step": "{1} steg",
  "{1} steps": "{1} steg",
  "{1} unit test": "{1} unit test",
  "{1} upvotes, {2} downvotes ({3}% like it)": "{1} uppröster, {2} nedröster ({3}% gillar det)",
  "{1}, matches any position": "{1}, matchar alla möjliga positioner",
  "{1}. A {2} followed by a letter with no special meaning is faulted": "{1}. En {2} följt av en bokstav utan någon specifik betydelser genererar ett fel",
  "{1}. A dot won't match {2}": "{1}. En punkt kommer inte matcha {2}",
  "{1}. All matches (don't return after first match)": "{1}. Alla träffar (avsluta inte efter första träffen)",
  "{1}. Case insensitive match (ignores case of {2})": "{1}. Matcha utan att ta hänsyn till gemener eller versaler (ignorerar skillnad i {2})",
  "{1}. Case sensitive match": "{1}. Matcha med hänsyn till gemener och versaler",
  "{1}. Causes {2} and {3} to match begin/end of string": "{1}. Orsakar {2} och {3} att matcha början/slut i strängen",
  "{1}. Causes {2} and {3} to match the begin/end of each line (not only begin/end of string)": "{1}. Orsakar {2} och {3} att matcha början/slut av varje linje (inte enbart början/slut av strängen)",
  "{1}. Dot matches newline characters {2}": "{1}. Dot matches newline characters {2}",
  "{1}. Enable all unicode features and interpret all unicode escape sequences as such": "{1}. Slå på all unicode funktionalitet och tolka alla unicode sekvenser",
  "{1}. Force the a dollar sign, {2}, to always match end of the string, instead of end of the line. This option is ignored if the {3}-flag is set": "{1}. Tvingar dollartecknet, {2}, att alltid matcha slutet av strängen, istället för slutet av raden. Denna inställningen ignoreras om {3}-flaggan är satt",
  "{1}. Force the escape sequences {2}, {3}, {4}, {5}, {6}, {7}, {8} and {9} to perform ASCII-only matching instead of full Unicode matching": "{1}. Tvinga sekvenserna {2}, {3}, {4}, {5}, {6}, {7}, {8} och {9} att enbart utföra matchningar i ASCII och inte hela Unicode",
  "{1}. Force the pattern to only match consecutive matches from where the previous match ended.": "{1}. Tvinga uttrycket att enbart matcha från var den senaste matchen slutade.",
  "{1}. Make {2}, {3}, {4}, {5}, {6}, {7}, {8} and {9} perform matching with Unicode semantic (redundant in Python 3)": "{1}. Orsaka {2}, {3}, {4}, {5}, {6}, {7}, {8} att {9} utföra matchning med Unicode-semantik (redundant i Python 3)",
  "{1}. Pattern is forced to {2}": "{1}. Uttrycket tvingas till {2}",
  "{1}. Pattern strings are treated as {2}. Also causes escape sequences to match unicode characters": "{1}. Strängar i uttrycket behandlas som {2}. Den påverkar även andra sekvenser att matcha unicode-tecken",
  "{1}. Spaces and text after a {2} in the pattern are ignored": "{1}. Mellanslag och text efter en {2} i uttrycket ignoreras",
  "{1}. The match becomes greedy by default": "{1}. Matcherna blir i regel giriga",
  "{1}. The match becomes lazy by default. Now a {2} following a quantifier makes it greedy": "{1}. Matcherna blir i regel lata. Ett {2} följt av en kvantifierare gör den girig",
  "{1}. Whitespaces and {2} in the pattern are treated literally": "{1}. Mellanslag och {2} i uttrycket behandlas bokstavligen",
  "`(?R1)` checks if a call to capture group 1 was made, which will return false the first time it is encountered because the regex engine is simply parsing capture group one.": "`(?R1)` checks if a call to capture group 1 was made, which will return false the first time it is encountered because the regex engine is simply parsing capture group one.",
  "^ and $ match start/end of line": "^ och $ matchar början/slut av raden",
  "$ matches only end of pattern": "$ matchar enbart slutet av uttrycket",
  "3 or more of a": "3 eller fler av a",
  "A case insensitive match is performed, meaning capital letters will be matched by non-capital letters and vice versa.": "A case insensitive match is performed, meaning capital letters will be matched by non-capital letters and vice versa.",
  "A character except: a, b or c": "En bokstav förutom: a, b eller c",
  "A character in the range: a-z": "En bokstav i serien: a-z",
  "A character in the range: a-z or A-Z": "En bokstav i serien: a-z eller A-Z",
  "A character not in the range: a-z": "En bokstav inte i serien: a-z",
  "a line": "en rad",
  "A lookbehind assertion has to be fixed width": "En lookbehind måste vara av begränsad längd",
  "A named subpattern may not have a name which length exceeds 32 characters": "Ett namngivet under-uttryck får inte ha ett namn vars längd överskrider 32 tecken",
  "A non-capturing group can come in handy when you wish to apply quantifiers to part of your regex but do not need to capture/isolate that particular match. For example repeating 1-3 digits and a period 3 times can be done like this: /(?:\\d{1,3}\\.)#{3}\\d{1,3}/": "A non-capturing group can come in handy when you wish to apply quantifiers to part of your regex but do not need to capture/isolate that particular match. For example repeating 1-3 digits and a period 3 times can be done like this: /(?:\\d{1,3}\\.)#{3}\\d{1,3}/",
  "A posix character class may only appear inside a character class": "En posix-klass får enbart användas inuti en tecken-klass",
  "A quantifier following a lookaround serves no purpose, and can safely be removed from the regular expression": "A quantifier following a lookaround serves no purpose, and can safely be removed from the regular expression",
  "A quantifier inside a lookbehind makes it non-fixed width": "En kvantifierare inuti en lookbehind resulterar i en icke-begränsad längd",
  "A repeated capturing group will only capture the last iteration. Put a capturing group around the repeated group to capture all iterations or use a non-capturing group instead if you're not interested in the data": "En upprepad minnesgrupp kommer enbart bevara information från den sista iterationen. Placera en minnesgrupp runt den upprepade gruppen för att bevara all data, eller använd en vanlig grupp om du inte är intresserad a datan",
  "a single character in the range between {1} {2} and {3} {4} ({5})": "ett tecken i spannet mellan {1} {2} och {3} {4} ({5})",
  "A single character of: a, b or c": "En bokstav av: a, b eller c",
  "A solution with a score of {1} is better than {2}% of all submissions.": "A solution with a score of {1} is better than {2}% of all submissions.",
  "A special thanks goes out to the following individuals who helped me with the quiz questions:": "A special thanks goes out to the following individuals who helped me with the quiz questions:",
  "A subpattern name must be alpha numeric and may not begin with a digit": "Ett under-uttrycks namn får enbart innehålla alfanumeriska tecken och får inte börja med en siffra",
  "A subpattern name must be unique": "Ett under-uttrycks namn måste vara unikt",
  "A word boundary": "En bokstavsgräns",
  "Absolute end of string": "Det absoluta slutet av en sträng",
  "Account": "Konto",
  "Account data": "Kontodata",
  "Account Page": "Kontosida",
  "acts like {1}, except that if the pattern is unanchored, the bumpalong advance is not to the next character, but to the position in the subject where {2} was encountered": "acts like {1}, except that if the pattern is unanchored, the bumpalong advance is not to the next character, but to the position in the subject where {2} was encountered",
  "Add": "Lägg till",
  "Add bold text": "Lägg till fet stil",
  "Add bulleted list": "Lägg till punktlista",
  "Add header": "Lägg till titel",
  "Add italic text": "Lägg till kursiv stil",
  "Add numbered list": "Lägg till numrerad lista",
  "Add tag": "Lägg till tagg",
  "Add to favorites": "Lägg till i favoriter",
  "All settings to control the application are located here.": "Alla inställningar för att kontrollera applikationen finns här.",
  "All the errors detected are listed below, from left to right, as they appear in the pattern.": "Alla fel som upptäcks har listas nedan, sett från vänster till höger i uttrycket.",
  "All Tokens": "Alla Symboler",
  "Allow duplicate subpattern names": "Tillåt under-uttryck med samma namn",
  "Allow others to edit permalink": "Tillåt andra att redigera permalänk",
  "Allows regex to match unicode characters via dotall and unicode escape sequences, as well as ES6 unicode code point escapes such as \\u{1D306}.": "Allows regex to match unicode characters via dotall and unicode escape sequences, as well as ES6 unicode code point escapes such as \\u{1D306}.",
  "Alternate: match either a or b": "Alternate: match either a or b",
  "Alternative (acts like boolean OR)": "Alternativ (beter sig som ett boolean OR)",
  "Always collapse left sidebar": "Kollapsa alltid vänster sidmeny",
  "Always collapse right sidebar": "Kollapsa alltid höger sidmeny",
  "An alternate way to match alphabet letters. Equivalent to [A-Za-z]. [[:alpha:]] is a POSIX notation and it needs to be inside a [character class] notation.": "An alternate way to match alphabet letters. Equivalent to [A-Za-z]. [[:alpha:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "An alternate way to match any letter or digit. Equivalent to [A-Za-z0-9]. [[:alnum:]] is a POSIX notation and it needs to be inside a [character class] notation.": "An alternate way to match any letter or digit. Equivalent to [A-Za-z0-9]. [[:alnum:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "An alternator at this position effectively truncates the entire pattern, rendering any other tokens beyond this point useless": "Ett alternativ på den här positionen trunkerar hela uttrycket, vilket resulterar i allt efter denna symbol blir meningslöst",
  "An alternator at this position effectively truncates the group, rendering any other tokens beyond this point useless": "Ett alternativ på den här positionen trunkerar gruppen, vilket resulterar i allt efter denna symbol blir meningslöst",
  "An empty alternative effectively makes this group optional which suggests the alternative is completely redundant": "Ett tomt alternativt resulterar i att denna gruppen blir frivillig, vilket i sin tur antyder att alternativet är redundant",
  "An end quote token encountered before a start quote token": "En avslutande citat-symbol upptäcktes före en start citat-symbol",
  "An explanation of your regex will be automatically generated as you type.": "En förklarande text av ditt uttryck kommer automatiskt generas allt eftersom du skriver.",
  "An unescaped delimiter must be escaped with a backslash (\\)": "En skiljetecken måste föregås med ett bakstreck (\\)",
  "Anchor": "Ankare",
  "Anchor to start of pattern": "Förankra till början av uttrycket",
  "Anchors": "Ankare",
  "anonymous": "anonym",
  "Any character following a \\ that is not a valid meta sequence will be faulted and raise an error. For example, \"\\O\" will cause an error, and it will not match.": "Any character following a \\ that is not a valid meta sequence will be faulted and raise an error. For example, \"\\O\" will cause an error, and it will not match.",
  "Any characters between \\Q and \\E, including metacharacters, will be treated as literals.": "Any characters between \\Q and \\E, including metacharacters, will be treated as literals.",
  "Any digit": "Alla siffror",
  "Any non-digit": "Alla icke-siffror",
  "Any non-whitespace character": "Alla icke-blanktecken",
  "Any non-word character": "Alla icke-ord-tecken",
  "Any single character": "Alla enskilda tecken",
  "Any text appearing in this group is ignored in the regex. Another option is enabling the x flag to allow \"# comments\" but it will also cause the regex engine to ignore spaces outside comments too (need to escape spaces to match: /\\ /).": "Any text appearing in this group is ignored in the regex. Another option is enabling the x flag to allow \"# comments\" but it will also cause the regex engine to ignore spaces outside comments too (need to escape spaces to match: /\\ /).",
  "Any Unicode sequences, linebreaks included": "Alla Unicode-sekvenser, även radbrytningar",
  "Any whitespace character": "Alla blanktecken",
  "Any word can be used as a tag": "Alla ord kan användas som en tagg",
  "Any word character": "Alla ord-tecken",
  "Are you sure you want to delete this regex?": "Är du säker på att du vill ta bort denna regex?",
  "Are you sure you want to delete this regex? This action is non-reversible and will delete all versions of this regex.": "Är du säger på att du vill ta bort denna regex? Denna handling går inte att ångra och kommer ta bort alla versioner av denna regex.",
  "as few times as possible, expanding as needed": "så få gånger som möjligt, utökar efter behov",
  "as many times as possible, giving back as needed": "så många gånger som möjligt, minskar efter behov",
  "as many times as possible, without giving back": "så många gånger som möjligt, och reviderar inte",
  "ASCII codes 0-127": "ASCII-tecken 0-127",
  "ASCII control characters": "ASCII kontrolltecken",
  "assert position at a word boundary: {1}": "assert position at a word boundary: {1}",
  "assert position where {1} does not match": "hävda position där {1} inte matchar",
  "assert that": "hävda att",
  "Assert that the Regex below does not match": "Hävda att Regexen nedan inte matchar",
  "Assert that the Regex below matches": "Hävda att Regexen nedan matchar",
  "Assertion": "Hävdan",
  "asserts position at start of {1}": "hävdar sin position vid början av {1}",
  "asserts position at start of the string": "hävdar sin position vid början av strängen",
  "asserts position at the end of a line": "hävdar sin position vid slutet av raden",
  "asserts position at the end of the previous match or the start of the string for the first match": "hävdar sin position vid slutet av föregående match, eller vid början av strängen för den första matchen",
  "asserts position at the end of the string": "hävdar sin position vid slutet av strängen",
  "asserts position at the end of the string, or before the line terminator right at the end of the string (if any)": "hävdar sin position vid slutet av strängen, eller precis innan radbrytningen vid slutet av strängen (om det finns en)",
  "Asserts that the given subpattern can be matched here, without consuming characters": "Hävda att det givna namnet på under-uttrycket kan matchas här, utan att konsumera några tecken",
  "Atomic Group": "Atomisk Grupp",
  "Atomic group (non-capturing)": "Atomisk grupp (icke-bevarande)",
  "Author": "Författare",
  "Auto-complete Brackets": "Auto-komplettera Parenteser",
  "Automatic": "Automatic",
  "Available keyboard shortcuts": "Available keyboard shortcuts",
  "Avoid using this legacy syntax for any new patterns.": "Avoid using this legacy syntax for any new patterns.",
  "Backspace character": "Backslags-tecken",
  "Backticks can not be used in a raw string, use \\x60 instead": "Backticks kan inte användas i en råsträng, använd \\x60 istället",
  "Because you are not signed in this entry has not been tied to an account. It is recommended you sign in so that your entries are never lost and you can manage them from the account page whenever you like.": "Eftersom du inte är inloggad, har denna post inte kopplats till något konto. Det rekommenderas att ni loggar in så att era poster aldrig förloras och så att ni kan kontrollera dem från kontosidan när ni vill.",
  "Become a sponsor": "Become a sponsor",
  "Become a sponsor!": "Become a sponsor!",
  "Before even attempting a match, the regex engine makes some checks, such as the length of the string. If it is not long enough to fit the pattern, it will automatically return a no match. This optimization can be disabled by using this modifier.": "Before even attempting a match, the regex engine makes some checks, such as the length of the string. If it is not long enough to fit the pattern, it will automatically return a no match. This optimization can be disabled by using this modifier.",
  "Beta Sign-in": "Beta-inloggning",
  "Between 3 and 6 of a": "Mellan 3 och 6 av a",
  "Beware that this will refresh the page and any unsaved progress will be lost!": "Se upp för att detta kommer ladda om sidan, och all data som inte sparats kommer gå förlorad!",
  "Bogus escape: this escape is not recognized in the python flavor": "Falsk escape: denna escape är inte igenkänd i python",
  "Branch Reset Group": "Branch Reset-grupp",
  "Bug Reports & Feedback": "Buggrapporter och Återkoppling",
  "Bugs or suggestions go here": "Buggar och förslag",
  "Cancel": "Avbryt",
  "Capture everything enclosed": "Bevara allt som omfattas",
  "capture group {1}": "bevarande grupp {1}",
  "Capture Group {1} is {2} ... and so on": "Bevrande grupp {1} är {2} ... och så vidare",
  "Capture Group {1} is {2} and its start/end positions can be obtained via {3} and {4}": "Bevarande grupp {1} är {2} och dess början- och slutpositioner kan fås via {3} och {4}",
  "Capture groups (...) in \"(?| ... )\" share the same number - the ID does not increase. If there already was a capture group prior to \"(?| ... )\" then all capture groups inside would have ID 2.": "Capture groups (...) in \"(?| ... )\" share the same number - the ID does not increase. If there already was a capture group prior to \"(?| ... )\" then all capture groups inside would have ID 2.",
  "Carriage return": "Carriage return",
  "case insensitive": "case insensitive",
  "Case insensitive": "Case insensitive",
  "Case insensitive match": "Case insensitive match",
  "case sensitive": "case sensitive",
  "Catastrophic Backtracking": "Catastrophic Backtracking",
  "Catastrophic backtracking has been detected and the execution of your expression has been halted. To find out more what this is, please read the following article:": "Catastrophic backtracking har påträffats och exekveringen av ditt uttryck har avbrutits. För att lära dig mer om vad detta är, var god läs följande artikel:",
  "Category": "Kategori",
  "causes a skip to the next innermost alternative if the rest of the pattern does not match": "causes a skip to the next innermost alternative if the rest of the pattern does not match",
  "causes the whole match to fail outright if the rest of the pattern does not match": "causes the whole match to fail outright if the rest of the pattern does not match",
  "causes token to be ignored": "causes token to be ignored",
  "Change delimiter": "Ändra skiljetecken",
  "character": "tecken",
  "Character class missing closing bracket": "Ordklass saknar avslutande parentes",
  "Character Classes": "Ordklasser",
  "Character range is out of order": "Teckenserie är i omvänd ordning",
  "Character range with surrogate pairs without unicode enables results in ambiguous behavior.": "Character range with surrogate pairs without unicode enables results in ambiguous behavior.",
  "characters": "tecken",
  "Checking your answer...": "Checking your answer...",
  "Close": "Stäng",
  "Close details": "Stäng detaljer",
  "Code Generator": "Kodgenerator",
  "Collapse all tests": "Kollapsa alla tester",
  "Comment": "Kommentar",
  "Comment group": "Comment group",
  "Common Tokens": "Vanliga Symboler",
  "Comparison string": "Jämförelsesträng",
  "Complete match contents": "Fullständigt matchresultat",
  "Conditional statement": "Villkorligt påstående",
  "Consider a donation": "Överväg en donation",
  "Contact": "Kontakt",
  "contains": "innehåller",
  "Contents after match": "Innehåll efter match",
  "Contents before match": "Innehåll före match",
  "Contents in capture group `foo`": "Innehåll i bevarande grupp `foo`",
  "Contents in capture group 1": "Innehåll i behållar-grupp 1",
  "Control": "Kontroll",
  "Control character Y": "Control character Y",
  "Control characters": "Kontrolltecken",
  "Control verb": "Kontrollverb",
  "Copied!": "Kopierat!",
  "Copy to clipboard": "Kopiera",
  "Criteria": "Kriterie",
  "Current score: {1}": "Current score: {1}",
  "Custom regex101 property that converts all subsequent tokens to their {1} equivalence until `\\E` is encountered": "Custom regex101 property that converts all subsequent tokens to their {1} equivalence until `\\E` is encountered",
  "Custom regex101 property that terminates any previous text transformation (initiated with either \\U or \\L)": "Custom regex101 property that terminates any previous text transformation (initiated with either \\U or \\L)",
  "Dark": "Mörk",
  "Data": "Data",
  "Decimal digits": "Decimaltal",
  "Decrease speed": "Decrease speed",
  "Decrease step range": "Decrease step range",
  "Default code generator language": "Default code generator language",
  "Default flavor": "Standard-språkvariant",
  "Delete": "Radera",
  "Delete library entry": "Radera bibliotekspost",
  "Delete permalink": "Radera permalink",
  "Delete Regex": "Radera Regex",
  "Delimiters": "Skiljetecken",
  "Description": "Beskrivning",
  "Description of regular expression": "Beskrivning av regex",
  "Detailed match information will be displayed here automatically.": "Detaljerad matchinformation kommer att visas här automatiskt.",
  "Disallow duplicate subpattern names": "Förbjud under-uttryck med samma namn",
  "Disallow meaningless escapes": "Förbjud meningslösa escapes",
  "Disallow others to edit permalink": "Förbjud andra från att redigera permalink",
  "Discussion": "Diskussion",
  "does match": "matchar",
  "does not match": "matchar inte",
  "Don't return after first match": "Returnera inte efter första matchning",
  "Donate": "Donera",
  "Dot matches newline": "Punkt matchar radbrytning",
  "Due to a bug in PCRE creating ranges with an escaped literal is unsafe. To avoid this, simply use the literal representation instead.": "Due to a bug in PCRE creating ranges with an escaped literal is unsafe. To avoid this, simply use the literal representation instead.",
  "Duplicate group names": "Duplicerade gruppnamn",
  "Duplicate/reset subpattern group number": "Duplicate/reset subpattern group number",
  "Edit": "Redigera",
  "Edit account entry": "Redigera kontopost",
  "Edit test": "Redigera test",
  "Edit title": "Redigera titel",
  "Edit title and tags": "Redigera titel och taggar",
  "Editor": "Editor",
  "Else match the following regex": "Annars matcha följande regex",
  "empty character class — matches {1}": "tom teckenklass — matchar {1}",
  "empty string": "tom sträng",
  "Enable or disable the syntax highlighting of your regular expression in the editor.": "Slå på eller av syntax highlight i ditt regex i editorn.",
  "Enable unicode support": "Slå på unicode-stöd",
  "End of quoted literals": "End of quoted literals",
  "End of string": "Slut av sträng",
  "End of word": "Slut av ord",
  "ends with": "slutar med",
  "Engine Error": "Motorfel",
  "Enjoy and I hope you learn something!": "Enjoy and I hope you learn something!",
  "Ensures that the given pattern will match, ending at the current position in the expression. The pattern be of variable width. Does not consume any characters.": "Ensures that the given pattern will match, ending at the current position in the expression. The pattern be of variable width. Does not consume any characters.",
  "Ensures that the given pattern will match, ending at the current position in the expression. The pattern must have a fixed width. Does not consume any characters.": "Ensures that the given pattern will match, ending at the current position in the expression. The pattern must have a fixed width. Does not consume any characters.",
  "Ensures that the given pattern would not match and end at the current position in the expression. The pattern be of variable width. Does not consume characters.": "Ensures that the given pattern would not match and end at the current position in the expression. The pattern be of variable width. Does not consume characters.",
  "Ensures that the given pattern would not match and end at the current position in the expression. The pattern must have a fixed width. Does not consume characters.": "Ensures that the given pattern would not match and end at the current position in the expression. The pattern must have a fixed width. Does not consume characters.",
  "Enter your regex and hit submit to see the result.": "Enter your regex and hit submit to see the result.",
  "equal to {1}": "ekvivalent till {1}",
  "equals": "motsvarar",
  "Evaluate the condition below and proceed accordingly": "Utvärdera villkoret nedan och fortsätt i enlighet med resultatet",
  "Exactly 3 of a": "Exakt 3 av a",
  "Expand all tests": "Expandera alla tester",
  "Expected group {1} to contain `{2}` but did not": "Förväntade grupp {1} att innehålla `{2}` men gjorde det inte.",
  "Expected group {1} to end with `{2}` but was instead `{3}`": "Förväntade grupp {1} att sluta med `{2}` men var istället `{3}`",
  "Expected group {1} to equal `{2}` but was instead `{3}`": "Förväntade grupp {1} att vara ekvivalent med `{2}` men var istället `{3}`",
  "Expected group {1} to start with `{2}` but was instead `{3}`": "Förväntade grupp {1} att starta med `{2}` men var istället `{3}`",
  "Expected regex to match, but did not.": "Förväntade regex att matcha, men gjorde det inte.",
  "Expected regex to not match, but did.": "Förväntade regex att inte matcha, men gjorde det ändå.",
  "Explanation": "Förklaring",
  "Export Matches": "Exportera Träffar",
  "Export Method": "Exportmetod",
  "eXtra": "eXtra",
  "Favorite Regex": "Lägg till regex i favoriter",
  "Fewest Points": "Fewest Points",
  "Filter by Flavor": "Filtrera på språkvariant",
  "Flags/Modifiers": "Flaggor/Modifierare",
  "Flavor": "Språkvariant",
  "Follow me on twitter!": "Följ mig på twitter!",
  "For a full regex reference for {1}, please visit:": "För en full referens för {1}, var god besök:",
  "Fork Regex": "Förgrena Regex",
  "Fork Regular Expression": "Skapa förgrening av Regex",
  "Form-feed": "Form-feed",
  "Full match": "Fullständig match",
  "full match": "fullständig match",
  "Full Search Result": "Fullständigt sökresultat",
  "Function": "Function",
  "General": "Generellt",
  "General Tokens": "Generella Symboler",
  "Generated Code": "Genererad Kod",
  "Github": "Github",
  "given the string": "given strängen",
  "Global": "Global",
  "Global pattern flags": "Globala flaggor",
  "Go to beginning": "Go to beginning",
  "Go to end": "Go to end",
  "Go to the beginning": "Go to the beginning",
  "Go to the end": "Go to the end",
  "Google": "Google",
  "greedy": "girig",
  "Greedy quantifier": "Girig kvantifierare",
  "Group": "Grupp",
  "Group {1}": "Grupp {1}",
  "Group {1} found at {2}": "Grupp {1} funnen på position {2}",
  "Group {1} no longer exists in the pattern or did not participate in the match": "Grupp {1} existerar inte längre i uttrycket, eller deltog inte i matchningen",
  "Group {1} was not expected to participate in the match but did anyway": "Grupp {1} förväntades inte delta i matchen, men gjorde det ändå",
  "group {1}: {2}": "grupp {1}: {2}",
  "Group Constructs": "Gruppkonstruktioner",
  "group did not participate in match": "gruppen deltog inte i matchen",
  "Groups with the same index must either have the same name or both be non-named groups": "Grupper med samma index måste antingen ha samma namn eller båda vara icke-bevarande grupper",
  "Headers": "Titlar",
  "Here comes a {1} tab character.": "Här kommer ett {1} tabb-tecken.",
  "Hex character YY": "Hex character YY",
  "Hex character YYYY": "Hex character YYYY",
  "Hexadecimal digits": "Hexadecimaler",
  "Hexadecimal replacement values": "Hexadecimal replacement values",
  "Highlight Syntax": "Highlighta Syntax",
  "Horizontal whitespace character": "Horizontal whitespace character",
  "I recommend you launch the debugger in the menu to the left and analyze the data to find out the cause.": "Jag rekommenderar att ni startar debuggern i menyn till vänster och analyserar datan för att hitta orsaken.",
  "If capturing group 1 was matched so far, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. A group name, or a relative position (-1) in PCRE, can be used. Global flag breaks conditionals.": "If capturing group 1 was matched so far, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. A group name, or a relative position (-1) in PCRE, can be used. Global flag breaks conditionals.",
  "If Clause": "If-Klausul",
  "If condition is met, match the following regex": "Om villkoret är uppfyllt, matcha följande regex",
  "If left to automatic, the code generator will mirror the currently selected flavor in the editor.": "If left to automatic, the code generator will mirror the currently selected flavor in the editor.",
  "If recursion of the whole pattern is successful, do something | otherwise do this.": "Om rekursion av hela uttrycket lyckas, gör något | annars detta.",
  "If the lookahead succeeds, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative. Global flag breaks conditionals.": "If the lookahead succeeds, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative. Global flag breaks conditionals.",
  "If the lookbehind succeeds, match the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative. Global flag, 'g', breaks conditionals.": "If the lookbehind succeeds, match the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative. Global flag, 'g', breaks conditionals.",
  "If this token is inside a capturing group, only that capturing group is ended successfully at that particular location, while the parent pattern continues to execute.": "If this token is inside a capturing group, only that capturing group is ended successfully at that particular location, while the parent pattern continues to execute.",
  "If you want to use this regex and data in your own experiments, click the `Fork Regex` button below instead.": "If you want to use this regex and data in your own experiments, click the `Fork Regex` button below instead.",
  "Ignore whitespace": "Ignorera blanktecken",
  "Ignore whitespace / verbose": "Ignore whitespace / verbose",
  "In the example below, the first alternate matched \"a\", and the second one matched \"bc\", however once it bumped into \"X\" none of the alternatives resulted in a match. Therefore the engine cannot return the next \"a\" as a match because \"X\" is not the last location where a match occurred.": "In the example below, the first alternate matched \"a\", and the second one matched \"bc\", however once it bumped into \"X\" none of the alternatives resulted in a match. Therefore the engine cannot return the next \"a\" as a match because \"X\" is not the last location where a match occurred.",
  "In this case `(?(R&sub1)...|...)` checks if a call to `sub1` has been made. The first time the recursive conditional is parsed, the engine is in the process of matching what `sub1` requires, but it isn't because of a callback to `sub1`.": "In this case `(?(R&sub1)...|...)` checks if a call to `sub1` has been made. The first time the recursive conditional is parsed, the engine is in the process of matching what `sub1` requires, but it isn't because of a callback to `sub1`.",
  "Include full match in exported data": "Include full match in exported data",
  "Include non-participating groups in match result": "Include non-participating groups in match result",
  "include the latest version of the regex crate in your Cargo.toml": "include the latest version of the regex crate in your Cargo.toml",
  "Incomplete group structure": "Inkomplett gruppstruktur",
  "Increase speed": "Increase speed",
  "Increase step range": "Increase step range",
  "Inline modifiers": "Inline modifierare",
  "Insert a carriage return character.": "Insert a carriage return character.",
  "Insert a form-feed character.": "Insert a form-feed character.",
  "Insert a newline character.": "Insert a newline character.",
  "Insert a personal title": "Insert a personal title",
  "Insert a tab character.": "Insert a tab character.",
  "Insert code snippet": "Insert code snippet",
  "insert comparison string": "insert comparison string",
  "Insert link": "Insert link",
  "Insert quote": "Insert quote",
  "insert test description": "insert test description",
  "insert test string": "insert test string",
  "insert your regular expression here": "insert your regular expression here",
  "insert your replacement value here": "insert your replacement value here",
  "insert your test string here": "insert your test string here",
  "inserts the matched substring": "inserts the matched substring",
  "inserts the portion of the string that follows the matched substring": "inserts the portion of the string that follows the matched substring",
  "inserts the portion of the string that precedes the matched substring": "inserts the portion of the string that precedes the matched substring",
  "Internal engine error: {1}": "Internt motorfel: {1}",
  "Introduction": "Introduction",
  "Invalid control character": "Invalid control character",
  "Invalid unicode escape": "Ogiltig unicode-escape",
  "is null": "är null",
  "It might be a good idea to open another tab to fiddle with the expressions, and utilize the very powerful unit test feature located in the regex editor.": "It might be a good idea to open another tab to fiddle with the expressions, and utilize the very powerful unit test feature located in the regex editor.",
  "Jump {1} steps backwards": "Jump {1} steps backwards",
  "Jump {1} steps forward": "Jump {1} steps forward",
  "Keep in mind that Python 3 is going to treat your whole script as unicode by default, therefore using this flag would be redundant. See the \"a\" flag to limit matches to ASCII characters only. Python 2 requires this flag to turn on unicode support.": "Keep in mind that Python 3 is going to treat your whole script as unicode by default, therefore using this flag would be redundant. See the \"a\" flag to limit matches to ASCII characters only. Python 2 requires this flag to turn on unicode support.",
  "Keyboard Shortcuts": "Keyboard Shortcuts",
  "Language": "Språk",
  "lazy": "lat",
  "Lazy quantifier": "Lat kvantifierare",
  "Letters": "Bokstäver",
  "Letters and digits": "Bokstäver och siffror",
  "Library entries": "Biblioteksposter",
  "Library Entry": "Bibliotekspost",
  "Light": "Ljus",
  "Like regex101? Support it by donating!": "Gillar du regex101? Visa stöd genom att donera!",
  "Line break modifier": "Line break modifier",
  "Line terminator(s) are {1} {2}": "Radbrytstecken är {1} {2}",
  "Lines are delimited by {1} {2}": "Rader särskiljs av {1} {2}",
  "Link to regular expression": "Länk till regex",
  "Live Help (IRC, opens new window)": "Live Hjälp (IRC, öppnar ett nytt fönster)",
  "Loading...": "Laddar...",
  "Localized inline modifiers": "Localized inline modifiers",
  "Lookahead conditional": "Lookahead conditional",
  "Lookbehind conditional": "Lookbehind conditional",
  "lowercase": "lowercase",
  "Lowercase letters": "Lowercase letters",
  "Lowercase Transformation": "Lowercase Transformation",
  "Make escape sequences perform ASCII-only matching": "Make escape sequences perform ASCII-only matching",
  "Make permalink private": "Gör permalink privat",
  "Make permalink public": "Gör permalink publik",
  "Make quantifiers lazy": "Gör kvantifierare lata",
  "Make regex perform ASCII-only matching instead of full Unicode matching. Applies to [a-z] ranges and escape sequences.": "Make regex perform ASCII-only matching instead of full Unicode matching. Applies to [a-z] ranges and escape sequences.",
  "Makes any character literal": "Behandlar alla tecken ordagrant",
  "marker verb whose main purpose is to track how a match was arrived at": "marker verb whose main purpose is to track how a match was arrived at",
  "Match": "Match",
  "Match {1}": "Match {1}",
  "Match {1} failed in {2} step(s)": "Match {1} misslyckades inom {2} steg",
  "Match {1} found in {2} step(s)": "Match {1} funnen inom {2} steg",
  "Match {1} halted after {2} step(s)": "Match {2} upphörde efter {2} steg",
  "Match {1} was found at {2}": "Match {1} funnen på position {2}",
  "Match a single character not present in the list below": "Matcha ett tecken som inte finns i listan nedan",
  "Match a single character not present in the set": "Matcha ett tecken som inte finns i mängden",
  "Match a single character present in the list below": "Matcha ett tecken som finns i listan nedan",
  "Match a single character present in the set": "Matcha ett tecken som finns i mängden",
  "match any non-word character in any script (equal to {1})": "match any non-word character in any script (equal to {1})",
  "match any word character in any script (equal to {1})": "match any word character in any script (equal to {1})",
  "Match anything but a newline": "Match anything but a newline",
  "Match but do not capture everything enclosed": "Match but do not capture everything enclosed",
  "Match everything enclosed": "Match everything enclosed",
  "Match Information": "Matchinformation",
  "Match nth subpattern": "Match nth subpattern",
  "Match one data unit": "Matcha en dataenhet",
  "Match previously-named capture group `letter`": "Match previously-named capture group `letter`",
  "Match Step {1}": "Match Step {1}",
  "Match Steps": "Match Steps",
  "Match subpattern `name`": "Matcha under-uttrycket `name`",
  "Match subpattern number #": "Match subpattern number #",
  "Match text the nth relative previous subpattern matched": "Match text the nth relative previous subpattern matched",
  "Match the first capture group following the current position in the expression. (?+2) is the second one, (?-1) is before current position.": "Match the first capture group following the current position in the expression. (?+2) is the second one, (?-1) is before current position.",
  "match the remainder of the pattern with the following effective flags: {1}": "match the remainder of the pattern with the following effective flags: {1}",
  "Match was found at {1}": "Match funnen på position {1}",
  "Match with full unicode": "Match with full unicode",
  "matches a alphabetic character {1}": "matches a alphabetic character {1}",
  "matches a alphanumeric character {1}": "matches a alphanumeric character {1}",
  "matches a alphanumeric character or {1} {2} (also written as {3})": "matches a alphanumeric character or {1} {2} (also written as {3})",
  "matches a backspace character {1}": "matches a backspace character {1}",
  "matches a carriage return {1}": "matches a carriage return {1}",
  "Matches a carriage return character, unicode character 2185.": "Matches a carriage return character, unicode character 2185.",
  "matches a character intended to be combined with another character (e.g. accents, umlauts, enclosing boxes, etc.)": "matches a character intended to be combined with another character (e.g. accents, umlauts, enclosing boxes, etc.)",
  "matches a character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages)": "matches a character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages)",
  "matches a character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.)": "matches a character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.)",
  "matches a character that encloses the character is is combined with (circle, square, keycap, etc.)": "matches a character that encloses the character is is combined with (circle, square, keycap, etc.)",
  "matches a character with {1} value {2} through {3}": "matchar ett tecken med {1}-värdet {2} till {3}",
  "matches a combining character (mark) as a full character on its own": "matches a combining character (mark) as a full character on its own",
  "matches a control character {1}": "matchar ett kontrolltecken {1}",
  "matches a digit (equal to {1})": "matchar en siffra (motsvarar {1})",
  "matches a digit {1} (also written as {2})": "matchar en siffra {1} (samma som {2})",
  "matches a digit zero through nine in any script except ideographic scripts": "matchar en siffra mellan noll och nio i alla skript förutom ideografiska skript",
  "matches a digit zero through nine in any script except ideographic scripts (equal to {1})": "matches a digit zero through nine in any script except ideographic scripts (equal to {1})",
  "matches a form-feed character {1}": "matches a form-feed character {1}",
  "matches a hexadecimal digit {1}": "matches a hexadecimal digit {1}",
  "matches a letter or ideograph that does not have lowercase and uppercase variants": "matches a letter or ideograph that does not have lowercase and uppercase variants",
  "matches a letter that appears at the start of a word when only the first letter of the word is capitalized": "matches a letter that appears at the start of a word when only the first letter of the word is capitalized",
  "matches a letter that exists in lowercase and uppercase variants (combination of {1}, {2} and {3})": "matches a letter that exists in lowercase and uppercase variants (combination of {1}, {2} and {3})",
  "matches a line separator character {1}": "matches a line separator character {1}",
  "matches a line-feed (newline) character {1}": "matches a line-feed (newline) character {1}",
  "matches a lowercase letter {1}": "matches a lowercase letter {1}",
  "matches a lowercase letter that has an uppercase variant": "matches a lowercase letter that has an uppercase variant",
  "Matches a newline character": "Matches a newline character",
  "Matches a null character, most often visually represented in unicode using U+2400.": "Matches a null character, most often visually represented in unicode using U+2400.",
  "matches a number that looks like a letter, such as a Roman numeral": "matches a number that looks like a letter, such as a Roman numeral",
  "matches a paragraph separator character {1}": "matches a paragraph separator character {1}",
  "matches a punctuation character {1}": "matches a punctuation character {1}",
  "matches a punctuation character such as an underscore that connects words": "matches a punctuation character such as an underscore that connects words",
  "matches a single character in the list {1} {2}": "matches a single character in the list {1} {2}",
  "matches a special character that is used like a letter": "matches a special character that is used like a letter",
  "matches a superscript or subscript digit, or a number that is not a digit (excluding numbers from ideographic scripts)": "matches a superscript or subscript digit, or a number that is not a digit (excluding numbers from ideographic scripts)",
  "matches a tab character {1}": "matches a tab character {1}",
  "Matches a tab character. Historically, tab stops happen every 8 characters.": "Matches a tab character. Historically, tab stops happen every 8 characters.",
  "Matches a unicode character that doesn't have any of the given properties.": "Matches a unicode character that doesn't have any of the given properties.",
  "Matches a unicode character with the given group of properties or categories:": "Matches a unicode character with the given group of properties or categories:",
  "Matches a unicode character with the given property:": "Matches a unicode character with the given property:",
  "Matches a unicode character without the given property.": "Matches a unicode character without the given property.",
  "matches a uppercase letter {1}": "matches a uppercase letter {1}",
  "matches a vertical tab character": "matches a vertical tab character",
  "matches a visible character {1}": "matches a visible character {1}",
  "matches a visible character or the space character {1}": "matches a visible character or the space character {1}",
  "matches a whitespace character that is invisible, but does take up space": "matches a whitespace character that is invisible, but does take up space",
  "matches a whitespace character, including a line break {1}": "matches a whitespace character, including a line break {1}",
  "matches a whitespace character, including a line break {1} (also written as {2})": "matches a whitespace character, including a line break {1} (also written as {2})",
  "Matches an `a` character or nothing.": "Matches an `a` character or nothing.",
  "matches an ASCII {1} or Latin-1 {2} control character": "matches an ASCII {1} or Latin-1 {2} control character",
  "matches an uppercase letter that has a lowercase variant": "matches an uppercase letter that has a lowercase variant",
  "matches any character {1}": "matchar alla tecken {1}",
  "Matches any character except for an a, b or c": "Matches any character except for an a, b or c",
  "Matches any character in the valid ASCII range. Equivalent to [\u0000-]. [[:ascii:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches any character in the valid ASCII range. Equivalent to [\u0000-]. [[:ascii:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches any character other than newline (or including newline with the /s flag)": "Matches any character other than newline (or including newline with the /s flag)",
  "Matches any character that is not a newline, the opposite of \\n, regardless of whether the single line (/s) flag is set. Equivalent to \"(?-s:.)\".": "Matches any character that is not a newline, the opposite of \\n, regardless of whether the single line (/s) flag is set. Equivalent to \"(?-s:.)\".",
  "Matches any character that is not horizontal whitespace (\\H).": "Matches any character that is not horizontal whitespace (\\H).",
  "matches any character that's not a digit (equal to {1})": "matches any character that's not a digit (equal to {1})",
  "matches any character that's not a horizontal whitespace character": "matches any character that's not a horizontal whitespace character",
  "matches any character that's not a vertical whitespace character": "matches any character that's not a vertical whitespace character",
  "matches any character, including newline": "matches any character, including newline",
  "matches any character, including unicode {1}": "matches any character, including unicode {1}",
  "Matches any characters between a and z, including a and z.": "Matches any characters between a and z, including a and z.",
  "Matches any characters between a-z or A-Z. You can combine as much as you please.": "Matches any characters between a-z or A-Z. You can combine as much as you please.",
  "Matches any characters except those in the range a-z.": "Matches any characters except those in the range a-z.",
  "matches any characters in the {1} {2}": "matches any characters in the {1} {2}",
  "matches any characters that {1} does not": "matches any characters that {1} does not",
  "matches any code point reserved for private use": "matches any code point reserved for private use",
  "matches any code point to which no character has been assigned": "matches any code point to which no character has been assigned",
  "matches any currency sign": "matches any currency sign",
  "Matches any decimal digit. Equivalent to [0-9].": "Matches any decimal digit. Equivalent to [0-9].",
  "matches any horizontal whitespace character (equal to {1})": "matches any horizontal whitespace character (equal to {1})",
  "matches any kind of closing bracket": "matches any kind of closing bracket",
  "matches any kind of closing quote": "matches any kind of closing quote",
  "matches any kind of hyphen or dash": "matches any kind of hyphen or dash",
  "matches any kind of invisible character (equal to {1})": "matches any kind of invisible character (equal to {1})",
  "matches any kind of letter from any language": "matches any kind of letter from any language",
  "matches any kind of numeric character in any script": "matches any kind of numeric character in any script",
  "matches any kind of opening bracket": "matches any kind of opening bracket",
  "matches any kind of opening quote": "matches any kind of opening quote",
  "matches any kind of punctuation character": "matches any kind of punctuation character",
  "matches any kind of punctuation character that is not a dash, bracket, quote or connector": "matches any kind of punctuation character that is not a dash, bracket, quote or connector",
  "matches any kind of visible character (equal to {1})": "matches any kind of visible character (equal to {1})",
  "matches any kind of whitespace or invisible separator": "matches any kind of whitespace or invisible separator",
  "Matches any letter, digit or underscore. Short for [a-zA-Z0-9_].": "Matches any letter, digit or underscore. Short for [a-zA-Z0-9_].",
  "matches any math symbols, currency signs, dingbats, box-drawing characters, etc": "matches any math symbols, currency signs, dingbats, box-drawing characters, etc",
  "matches any mathematical symbol": "matches any mathematical symbol",
  "matches any non-newline character": "matches any non-newline character",
  "matches any non-numeric character in any script (equal to {1})": "matches any non-numeric character in any script (equal to {1})",
  "matches any non-whitespace character (equal to {1})": "matches any non-whitespace character (equal to {1})",
  "matches any non-word character (equal to {1})": "matches any non-word character (equal to {1})",
  "matches any number of Unicode characters that form an extended Unicode sequence": "matches any number of Unicode characters that form an extended Unicode sequence",
  "Matches any space, tab or newline character.": "Matches any space, tab or newline character.",
  "matches any Unicode newline sequence; can be modified using verbs": "matches any Unicode newline sequence; can be modified using verbs",
  "Matches any Unicode newline sequence. Equivalent to (?>\\r\\n|\\n|\\x0b|\\f|\\r|\\x85).": "Matches any Unicode newline sequence. Equivalent to (?>\\r\\n|\\n|\\x0b|\\f|\\r|\\x85).",
  "Matches any valid Unicode sequence, including line breaks. Similar to \".\" with the single line (/s) flag set. Equivalent to \"(?:s.)\".": "Matches any valid Unicode sequence, including line breaks. Similar to \".\" with the single line (/s) flag set. Equivalent to \"(?:s.)\".",
  "matches any vertical whitespace character": "matches any vertical whitespace character",
  "matches any whitespace character (equal to {1})": "matches any whitespace character (equal to {1})",
  "matches any word character (equal to {1})": "matches any word character (equal to {1})",
  "Matches anything not matched by \\v, equivalent to [^\\x#{2028}\\n\\r\\x{000B}\\f\\x#{2029}\\x{0085}] for PCRE or [^\\x{000B}] for Golang/RE2, Python, and Javascript.": "Matches anything not matched by \\v, equivalent to [^\\x#{2028}\\n\\r\\x{000B}\\f\\x#{2029}\\x{0085}] for PCRE or [^\\x{000B}] for Golang/RE2, Python, and Javascript.",
  "Matches anything other than a decimal digit.": "Matches anything other than a decimal digit.",
  "Matches anything other than a letter, digit or underscore. Short for [^a-zA-Z0-9_]": "Matches anything other than a letter, digit or underscore. Short for [^a-zA-Z0-9_]",
  "Matches anything other than a space, tab or newline.": "Matches anything other than a space, tab or newline.",
  "Matches as few characters as possible.": "Matches as few characters as possible.",
  "Matches as many characters as possible; backtracking can't reduce the number of characters matched. Because it is greedy, it will match all the way to the last digit, leaving nothing else for the {1} to match. Without backtracking, this regex fails to produce a match.": "Matches as many characters as possible; backtracking can't reduce the number of characters matched. Because it is greedy, it will match all the way to the last digit, leaving nothing else for the {1} to match. Without backtracking, this regex fails to produce a match.",
  "Matches as many characters as possible.": "Matches as many characters as possible.",
  "Matches ASCII characters typically associated with Control+A through Control+Z: \\x01 through \\x1A.": "Matches ASCII characters typically associated with Control+A through Control+Z: \\x01 through \\x1A.",
  "Matches at least 3 consecutive `a` characters.": "Matches at least 3 consecutive `a` characters.",
  "Matches between 3 and 6 (inclusive) consecutive `a` characters.": "Matches between 3 and 6 (inclusive) consecutive `a` characters.",
  "Matches characters that are not whitespace, letters or numbers. [[:punct:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches characters that are not whitespace, letters or numbers. [[:punct:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches characters that are often used to control text presentation, including newlines, null characters, tabs and the escape character. Equivalent to [\\x00-\\x1F\\x7F]. [[:cntrl:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches characters that are often used to control text presentation, including newlines, null characters, tabs and the escape character. Equivalent to [\\x00-\\x1F\\x7F]. [[:cntrl:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches decimal digits. Equivalent to [0-9]. [[:digit:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches decimal digits. Equivalent to [0-9]. [[:digit:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches either an a, b or c character": "Matches either an a, b or c character",
  "Matches either what is before the \"|\" or what is after it - in this case \"a\" or \"b\". You can also restrict alternates to part of the regex by using capturing/non-capturing groups; i.e. \"/I love (?:cats|dogs) but hate snakes/\" would only alternate and match \"cats\"/\"dogs\" vs the whole left and right side of the regex. If you need to also capture/isolate \"cats\" or \"dogs\" in that sentence, you can use \"/I love (cats|dogs) but hate snakes/\" instead.": "Matches either what is before the \"|\" or what is after it - in this case \"a\" or \"b\". You can also restrict alternates to part of the regex by using capturing/non-capturing groups; i.e. \"/I love (?:cats|dogs) but hate snakes/\" would only alternate and match \"cats\"/\"dogs\" vs the whole left and right side of the regex. If you need to also capture/isolate \"cats\" or \"dogs\" in that sentence, you can use \"/I love (cats|dogs) but hate snakes/\" instead.",
  "Matches end of word (POSIX syntax), equivalent to {1}": "Matches end of word (POSIX syntax), equivalent to {1}",
  "matches esc {1}": "matches esc {1}",
  "Matches exactly 3 consecutive `a` characters.": "Matches exactly 3 consecutive `a` characters.",
  "Matches exactly one data unit of input. Can match individual bytes in UTF-8 mode, leading to undefined behaviour if a search starts inside a character.": "Matches exactly one data unit of input. Can match individual bytes in UTF-8 mode, leading to undefined behaviour if a search starts inside a character.",
  "Matches hexadecimal digits, case insensitive. Equivalent to [0-9a-fA-F].": "Matches hexadecimal digits, case insensitive. Equivalent to [0-9a-fA-F].",
  "matches invisible control characters and unused code points": "matches invisible control characters and unused code points",
  "matches invisible formatting indicator": "matches invisible formatting indicator",
  "Matches letters, numbers and underscores. Equivalent to \\w or [a-zA-Z0-9_]. [[:word:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches letters, numbers and underscores. Equivalent to \\w or [a-zA-Z0-9_]. [[:word:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches lowercase letters. Equivalent to [a-z]. [[:lower:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches lowercase letters. Equivalent to [a-z]. [[:lower:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "matches one data unit, even in UTF mode (best avoided)": "matches one data unit, even in UTF mode (best avoided)",
  "matches one half of a surrogate pair in {1} encoding": "matches one half of a surrogate pair in {1} encoding",
  "Matches one or more consecutive `a` characters.": "Matches one or more consecutive `a` characters.",
  "Matches printable characters, part of the basic latin set, such as letters and spaces, without including control characters. [[:print:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches printable characters, part of the basic latin set, such as letters and spaces, without including control characters. [[:print:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches printable, non-whitespace, non-control characters only. Equivalent to [!-~]. [[:graph:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches printable, non-whitespace, non-control characters only. Equivalent to [!-~]. [[:graph:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches spaces and horizontal tabs. Works with Unicode. Equivalent to [\ts].": "Matches spaces and horizontal tabs. Works with Unicode. Equivalent to [\ts].",
  "Matches spaces and tabs (but not newlines). Equivalent to [ \t]. [[:blank:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches spaces and tabs (but not newlines). Equivalent to [ \t]. [[:blank:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches start of word (POSIX syntax), equivalent to {1}": "Matches start of word (POSIX syntax), equivalent to {1}",
  "Matches text the nth group matched and captured. n represents the capture group number and can positionally refer to past capture groups as well; i.e. \\g{-2} would be the second previous capture group, \\g#{3} would be the third capture group. This may be useful in order to avoid ambiguity with octal characters, or when a literal number needs to be matched immediately after a \\gn in the regex.": "Matches text the nth group matched and captured. n represents the capture group number and can positionally refer to past capture groups as well; i.e. \\g{-2} would be the second previous capture group, \\g#{3} would be the third capture group. This may be useful in order to avoid ambiguity with octal characters, or when a literal number needs to be matched immediately after a \\gn in the regex.",
  "Matches text the nth group prior to the current position of \"\\g{-n}\" matched and captured. \\g{-1} would be the last capture group before \"\\g\". \\g{-2} would be the capture group before the last, and so on.": "Matches text the nth group prior to the current position of \"\\g{-n}\" matched and captured. \\g{-1} would be the last capture group before \"\\g\". \\g{-2} would be the capture group before the last, and so on.",
  "matches the {1} {2} literally {3}": "matchar {1} {2} bokstavligen {3}",
  "Matches the 16-bit character with the given hex value.": "Matches the 16-bit character with the given hex value.",
  "Matches the 8-bit character with the given hex value.": "Matches the 8-bit character with the given hex value.",
  "Matches the 8-bit character with the given octal value.": "Matches the 8-bit character with the given octal value.",
  "Matches the backspace control character. \\b outside of a character class [...] is a word boundary.": "Matches the backspace control character. \\b outside of a character class [...] is a word boundary.",
  "matches the bell character {1}": "matches the bell character {1}",
  "Matches the capture group called \"name\". Note that you cannot use curly brackets (?{name}a+) to name a capture group in PCRE": "Matches the capture group called \"name\". Note that you cannot use curly brackets (?{name}a+) to name a capture group in PCRE",
  "matches the character {1} with index {2} ({3} or {4}) literally ({5})": "matches the character {1} with index {2} ({3} or {4}) literally ({5})",
  "matches the control sequence {1} {2}": "matches the control sequence {1} {2}",
  "Matches the end of a string only. Unlike $, this is not affected by multiline mode, and, in contrast to \\Z, will not match before a trailing newline at the end of a string.": "Matches the end of a string only. Unlike $, this is not affected by multiline mode, and, in contrast to \\Z, will not match before a trailing newline at the end of a string.",
  "Matches the end of a string only. Unlike $, this is not affected by multiline mode.": "Matches the end of a string only. Unlike $, this is not affected by multiline mode.",
  "Matches the end of a string without consuming any characters. If multiline mode is used, this will also match immediately before a newline character.": "Matches the end of a string without consuming any characters. If multiline mode is used, this will also match immediately before a newline character.",
  "Matches the longest possible substring in the group and doesn't allow later backtracking to reevaluate the group. It is not a capturing group.": "Matches the longest possible substring in the group and doesn't allow later backtracking to reevaluate the group. It is not a capturing group.",
  "matches the negation of {1}": "matches the negation of {1}",
  "matches the same text as most recently matched by the {1} capturing group": "matches the same text as most recently matched by the {1} capturing group",
  "matches the same text as most recently matched by the capturing group named {1}": "matches the same text as most recently matched by the capturing group named {1}",
  "matches the same text as most recently matched by the entire pattern": "matches the same text as most recently matched by the entire pattern",
  "Matches the same text matched by a previously named capture group.": "Matches the same text matched by a previously named capture group.",
  "Matches the start of a string only. Unlike ^, this is not affected by multiline mode.": "Matches the start of a string only. Unlike ^, this is not affected by multiline mode.",
  "Matches the start of a string without consuming any characters. If multiline mode is used, this will also match immediately after a newline character.": "Matches the start of a string without consuming any characters. If multiline mode is used, this will also match immediately after a newline character.",
  "Matches the text captured by the nth group. n can contain more than one digit, if necessary. This may be useful in order to avoid ambiguity with octal characters.": "Matches the text captured by the nth group. n can contain more than one digit, if necessary. This may be useful in order to avoid ambiguity with octal characters.",
  "Matches the text matched by a previously named capture group.": "Matches the text matched by a previously named capture group.",
  "Matches the unicode character with the given hex value.": "Matches the unicode character with the given hex value.",
  "Matches uppercase letters. Equivalent to [A-Z]. [[:upper:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches uppercase letters. Equivalent to [A-Z]. [[:upper:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "matches various symbols that are not math symbols, currency signs, or combining characters": "matches various symbols that are not math symbols, currency signs, or combining characters",
  "Matches whitespace characters. Equivalent to \\s. [[:space:]] is a POSIX notation and it needs to be inside a [character class] notation.": "Matches whitespace characters. Equivalent to \\s. [[:space:]] is a POSIX notation and it needs to be inside a [character class] notation.",
  "Matches zero or more consecutive `a` characters.": "Matches zero or more consecutive `a` characters.",
  "Matches, without consuming any characters, at the position between two characters matched by \\w.": "Matches, without consuming any characters, at the position between two characters matched by \\w.",
  "Matches, without consuming any characters, immediately between a character matched by \\w and a character not matched by \\w (in either order). It cannot be used to separate non words from words.": "Matches, without consuming any characters, immediately between a character matched by \\w and a character not matched by \\w (in either order). It cannot be used to separate non words from words.",
  "Max Execution Time": "Max exekveringstid",
  "May only be used to define functions. No matching is done in this group.": "May only be used to define functions. No matching is done in this group.",
  "meaningless quantifier": "meningslös kvantifierare",
  "Meta Sequences": "Metasymboler",
  "Most Points": "Most Points",
  "Most Recent": "Most Recent",
  "Move down": "Flytta ner",
  "Move up": "Flytta upp",
  "Multiline": "Flerradig",
  "My Expressions": "Mina Uttryck",
  "My Favorites": "Mina Favoriter",
  "My History": "Min Historik",
  "My Library Entries": "Mina Biblioteksposter",
  "My Regular Expressions": "Mina Reguljära Uttryck",
  "My rendition of it is incomplete, and there are many improvements to be made. If you do have any feedback, please post it in the github issues and I will take a look at it.": "My rendition of it is incomplete, and there are many improvements to be made. If you do have any feedback, please post it in the github issues and I will take a look at it.",
  "Name or other identifier of the author": "Författarens namn eller annan identifierare",
  "Named Capture Group {1}": "Namngiven Bevarande Grupp {1}",
  "Named capture groups can be called via {1}": "Namngiven bevarande grupp anropad via {1}",
  "Named Capturing Group": "Namngiven Bevarande Grupp",
  "Negation of \\h": "Negering av \\h",
  "Negation of \\p": "Negering av \\p",
  "Negation of \\pX": "Negering av \\pX",
  "Negation of \\v": "Negation of \\v",
  "Negative Lookahead": "Negative Lookahead",
  "Negative Lookbehind": "Negative Lookbehind",
  "Newline": "Newline",
  "Next question": "Next question",
  "no description available": "ingen beskrivning tillgänglig",
  "No hex code was specified": "No hex code was specified",
  "No Internet Connection": "Anslutning till Internet saknas",
  "No Match": "Ingen Match",
  "No match groups were extracted.": "Inga matchgrupper extraherades.",
  "Non-capturing group": "Icke-bevarande grupp",
  "Non-capturing Group. Matches the regex below with the following effective flags: {1}": "Non-capturing Group. Matches the regex below with the following effective flags: {1}",
  "Non-word boundary": "Icke-ord-gräns",
  "Note that this feature is not yet supported on all browsers; use at your own discretion!": "Note that this feature is not yet supported on all browsers; use at your own discretion!",
  "Note: for Python 2.7 compatibility, use ur{1}{2} to prefix the regex and u\"\" to prefix the test string and substitution.": "Note: for Python 2.7 compatibility, use ur{1}{2} to prefix the regex and u\"\" to prefix the test string and substitution.",
  "Nothing to preview": "Inget att förhandsvisa",
  "Null character": "Null-tecken",
  "Octal character ddd": "Octal character ddd",
  "Octal Character Table": "Octal Character Table",
  "Oh no!": "Åh nej!",
  "Ok": "Ok",
  "Once `(?1)` is called, `(?(R1)true|false)` will return true since capture group 1 was called, and will match `ction`": "Once `(?1)` is called, `(?(R1)true|false)` will return true since capture group 1 was called, and will match `ction`",
  "Once we actually call `sub1` the conditional will return true, at which point `ction` matches.": "Once we actually call `sub1` the conditional will return true, at which point `ction` matches.",
  "one": "en",
  "One or more of a": "En eller fler av a",
  "Open regex in editor": "Öppna regexeditor",
  "optional": "optional",
  "Order By": "Sortera Efter",
  "Parts of the regex enclosed in parentheses may be referred to later in the expression or \"extracted\" from the results of a successful match by its ID. A common assumption is that repeating a capture group would create separate groups for each time it matches - that is incorrect. If a repeat capture is desired you will have to rely on a pattern that is repeatable via the /g flag. For example /(\\bword\\b)/gm would match and capture \"word\" as many times as it is found in your text.": "Parts of the regex enclosed in parentheses may be referred to later in the expression or \"extracted\" from the results of a successful match by its ID. A common assumption is that repeating a capture group would create separate groups for each time it matches - that is incorrect. If a repeat capture is desired you will have to rely on a pattern that is repeatable via the /g flag. For example /(\\bword\\b)/gm would match and capture \"word\" as many times as it is found in your text.",
  "Pattern Backtrack Indicator": "Pattern Backtrack Indicator",
  "Pattern Error": "Fel i uttryck",
  "Pattern may not end with a trailing backslash": "Uttrycker får inte sluta med ett bakstreck",
  "Pattern modifier": "Uttrycks-modifierare",
  "Pattern strings will be treated as UTF-16, which means that unicode characters will also be included in [a-z] ranges, and in escape sequences.": "Pattern strings will be treated as UTF-16, which means that unicode characters will also be included in [a-z] ranges, and in escape sequences.",
  "Pause": "Pause",
  "Plain Text": "Klartext",
  "Play": "Play",
  "Please enable JavaScript to use this web application.": "Var god slå på JavaScript för att använda denna webapplikation.",
  "Please keep in mind that these code samples are automatically generated and are not guaranteed to work. If you find any syntax errors, feel free to submit a bug report.": "Please keep in mind that these code samples are automatically generated and are not guaranteed to work. If you find any syntax errors, feel free to submit a bug report.",
  "Please note that the quiz is still under development and is to be considered in BETA. It is subject to change, but I'm trying to avoid as many drastic changes as possible. I apologize for any inconvenience this may cause you.": "Please note that the quiz is still under development and is to be considered in BETA. It is subject to change, but I'm trying to avoid as many drastic changes as possible. I apologize for any inconvenience this may cause you.",
  "Please note this feature is experimental in JavaScript and might not be supported by your browser.": "Please note this feature is experimental in JavaScript and might not be supported by your browser.",
  "Please upgrade your browser and come back.": "Please upgrade your browser and come back.",
  "Please wait while the app is loading...": "Var god vänta medan appen laddar...",
  "Please wait while your expression is being debugged...": "Var god vänta medan ditt uttryck debuggas...",
  "Please wait while your request is being processed.": "Var god vänta medan din förfrågan processeras.",
  "pos: {1}-{2}": "pos: {1}-{2}",
  "Positive Lookahead": "Positive Lookahead",
  "Positive Lookbehind": "Positive Lookbehind",
  "POSIX Word Boundaries must be the only item inside a character class.": "POSIX Word Boundaries must be the only item inside a character class.",
  "possessive": "possessive",
  "Possessive quantifier": "Possessive quantifier",
  "Pre-define patterns before using them": "Pre-define patterns before using them",
  "Press {1} to copy": "Press {1} to copy",
  "Preview": "Förhandsvisning",
  "Print the match result": "Skriv ut matchresultatet",
  "Print the result of the substitution": "Skriv ut resultatet från substitutionen",
  "Proceed matching from where previous match ended only": "Proceed matching from where previous match ended only",
  "Processing...": "Processerar...",
  "Quantifier": "Kvantifierare",
  "Quantifier range is too large": "Kvantifierare är för stor",
  "Quantifiers": "Kvantifierare",
  "Quick Reference": "Snabbreferens",
  "Quiz": "Quiz",
  "Quiz Submission Score": "Quiz Submission Score",
  "Quote; treat as literals": "Citat; behandla bokstavligen",
  "Quoted Literals": "Ordagranna tecken",
  "Quoted Literals: match the string enclosed in the quote literally": "Quoted Literals: match the string enclosed in the quote literally",
  "Recurse entire pattern": "Recurse entire pattern",
  "Recurse first relative subpattern": "Recurse first relative subpattern",
  "Recurse first subpattern": "Recurse first subpattern",
  "Recurse named capture group `letter`": "Recurse named capture group `letter`",
  "Recurse nth capture group": "Recurse nth capture group",
  "Recurse nth capture group ahead of the current position of \\g'+n'. Positional; i.e. \\g'-2' is the second capture group behind \\g'-2'.": "Recurse nth capture group ahead of the current position of \\g'+n'. Positional; i.e. \\g'-2' is the second capture group behind \\g'-2'.",
  "Recurse nth capture group ahead of the current position of \\g<+n>. \\g<+2> is the second capture group after \\g.": "Recurse nth capture group ahead of the current position of \\g<+n>. \\g<+2> is the second capture group after \\g.",
  "Recurse nth capture group.": "Recurse nth capture group.",
  "Recurse nth capture group. n can contain more than one digit, and can be positional as well; i.e. \\g'-1' would be the previous capture group, \\g'3' would be the third capture group. Similar to \\g<n>": "Recurse nth capture group. n can contain more than one digit, and can be positional as well; i.e. \\g'-1' would be the previous capture group, \\g'3' would be the third capture group. Similar to \\g<n>",
  "Recurse nth capture group. n can contain more than one digit, and can be positional as well; i.e. \\g<-1> would be the previous capture group, \\g<+3> would be the third next capture group. Similar to \\g'n'": "Recurse nth capture group. n can contain more than one digit, and can be positional as well; i.e. \\g<-1> would be the previous capture group, \\g<+3> would be the third next capture group. Similar to \\g'n'",
  "Recurse nth relative upcoming subpattern": "Recurse nth relative upcoming subpattern",
  "Recurse subpattern `name`": "Recurse subpattern `name`",
  "Recurse subpattern called `name`": "Recurse subpattern called `name`",
  "Recurse the capture group called \"letter\". This is an alternative notation for \\g'letter'": "Recurse the capture group called \"letter\". This is an alternative notation for \\g'letter'",
  "Recurse the capture group called `letter`.": "Recurse the capture group called `letter`.",
  "recurses the {1} subpattern": "recurses the {1} subpattern",
  "recurses the entire pattern": "recurses the entire pattern",
  "recurses the subpattern named {1}": "recurses the subpattern named {1}",
  "Recursive Conditional statement": "Recursive Conditional statement",
  "Recursively match the entire expression. (?0) and \\g<0> are synonymous. This is useful for balanced tags. Note that `(?R)` is wrapped in a superfluous capture group to help visually identify its match in the example string.": "Recursively match the entire expression. (?0) and \\g<0> are synonymous. This is useful for balanced tags. Note that `(?R)` is wrapped in a superfluous capture group to help visually identify its match in the example string.",
  "Recursively match the first capture group.": "Recursively match the first capture group.",
  "Recursively matches the given capture group by name. It does not require that the capture group be defined beforehand.": "Recursively matches the given capture group by name. It does not require that the capture group be defined beforehand.",
  "Recursively matches the given named subpattern or capture group.": "Recursively matches the given named subpattern or capture group.",
  "regex": "regex",
  "Regex Debugger": "Regexdebuggare",
  "Regex Editor": "Regexeditor",
  "Regex engine modifier": "Regex motor-modifierare",
  "Regex Flags": "Regexflaggor",
  "Regex Library": "Regexbibliotek",
  "Regex Quiz": "Regex Quiz",
  "RegEx Score (lower is better)": "RegEx Score (lower is better)",
  "Regex Versions": "Regexversioner",
  "Regex will continue parsing the string keeping in mind the last match location. If the next match is not located directly after the last, this next match is discarded.": "Regex will continue parsing the string keeping in mind the last match location. If the next match is not located directly after the last, this next match is discarded.",
  "Regex101 only supports inline modifiers to be placed at the start of the regex for python (which is also best practice)": "Regex101 only supports inline modifiers to be placed at the start of the regex for python (which is also best practice)",
  "Regular Expression": "Regular Expression",
  "Relevance": "Relevans",
  "Remember that you can also delete this regex from the account page at any time.": "Kom igår att du kan radera denna regex via kontosidan när som helst.",
  "Remove from favorites": "Ta bort från favoriter",
  "Reset match": "Återställ match",
  "resets the starting point of the reported match. Any previously consumed characters are no longer included in the final match": "resets the starting point of the reported match. Any previously consumed characters are no longer included in the final match",
  "Restrict matches to ASCII only": "Begränsa matcher till enbart ASCII",
  "Result": "Result",
  "result will be a String with the substituted value": "result will be a String with the substituted value",
  "result will be a tuple containing the start and end indices for the first match in the string": "result will be a tuple containing the start and end indices for the first match in the string",
  "result will be an iterator over tuples containing the start and end indices for each match in the string": "result will be an iterator over tuples containing the start and end indices for each match in the string",
  "Run test": "Kör test",
  "Run tests": "Kör tester",
  "Save": "Spara",
  "Save & Share": "Spara & Dela",
  "Save Regex": "Spara Regex",
  "Save Regular Expression": "Spara Regex",
  "Saved regex": "Sparade regex",
  "Saved settings": "Inställningar sparade",
  "script": "script",
  "script extension": "script extension",
  "Search library": "Sök i bibliotek",
  "Search reference": "Sökterm",
  "Seek one step backwards": "Seek one step backwards",
  "Seek one step forward": "Seek one step forward",
  "Seek one step forwards": "Seek one step forwards",
  "Select Regex Version": "Välj Regexversion",
  "Select the flavor you want to use when the site loads. Note: a saved entry's flavor will override this.": "Select the flavor you want to use when the site loads. Note: a saved entry's flavor will override this.",
  "Send me an email": "Skicka mig ett email",
  "Set Regex Options": "Välj regex-inställningar",
  "Sets the given position in the regex as the new \"start\" of the match. This means that nothing preceding the K will be captured in the overall match.": "Sets the given position in the regex as the new \"start\" of the match. This means that nothing preceding the K will be captured in the overall match.",
  "sets the property mode to {1}": "sets the property mode to {1}",
  "sets the property mode to Unicode": "sets the property mode to Unicode",
  "Settings": "Inställningar",
  "Shortcut": "Shortcut",
  "shorthand for {1}": "förkortning för {1}",
  "Show informative and helpful tooltips when hovering tokens in the regex editor": "Visa informativa och hjälpsamma verktygstips när man hovrar symboler i regexeditorn",
  "Show Line Numbers in Regex Editor": "Visa radnummer i Regexeditorn",
  "Show Line Numbers in Test String Editor and Substitution Result": "Visa radnummer i testeditorn och substitueringsresultatet",
  "Show Sidebar": "Visa Sidopanel",
  "Show tooltips": "Visa verktygstips",
  "Show warning popup when trying to leave site with unsaved data": "Show warning popup when trying to leave site with unsaved data",
  "Show Whitespace": "Visa Blanktecken",
  "Sign In": "Logga In",
  "Sign in with one of the providers below": "Logga in via en av leverantörerna nedan",
  "Sign out": "Logga ut",
  "Signing in allows you to add favorites as well as manage, make private, and delete your expressions.": "Signing in allows you to add favorites as well as manage, make private, and delete your expressions.",
  "Single line": "Single line",
  "Space or tab only": "Blanktecken eller tabb enbart",
  "specifies a newline convention: {1}, {2} or {3}": "specifies a newline convention: {1}, {2} or {3}",
  "specifies a newline convention: {1}, {2} or {3} only": "specifies a newline convention: {1}, {2} or {3} only",
  "specifies a newline convention: {1}, followed by {2}": "specifies a newline convention: {1}, followed by {2}",
  "specifies a newline convention: all unicode newline sequences {1}": "specifies a newline convention: all unicode newline sequences {1}",
  "specifies a newline convention: any Unicode newline sequence": "specifies a newline convention: any Unicode newline sequence",
  "specifies a newline convention: carriage return": "specifies a newline convention: carriage return",
  "specifies a newline convention: line-feed": "specifies a newline convention: line-feed",
  "Sponsor": "Sponsor",
  "Start of match": "Start av match",
  "Start of string": "Start av sträng",
  "Start of word": "Start av ord",
  "Starting at the current position in the expression, ensures that the given pattern will not match. Does not consume characters.": "Starting at the current position in the expression, ensures that the given pattern will not match. Does not consume characters.",
  "starts with": "startar med",
  "step": "steg",
  "steps": "steg",
  "Sticky - searches in strings only from the index of the last match": "Sticky - searches in strings only from the index of the last match",
  "Style": "Stil",
  "Styling with Markdown is supported": "Styling with Markdown is supported",
  "Submit": "Skicka",
  "Submit to Regex Library": "Skicka till regexbibliotek",
  "Submitted by": "Inskickat av",
  "Submitting entry, please wait.": "Skickar post, var god vänta.",
  "Subpattern definition construct": "Subpattern definition construct",
  "Subpatterns declared within each alternative of this construct will start over from the same index": "Subpatterns declared within each alternative of this construct will start over from the same index",
  "Substitution": "Substitution",
  "Substitution result": "Substitutionsresultat",
  "suppresses the start-of-match optimizations that are otherwise run by Perl": "suppresses the start-of-match optimizations that are otherwise run by Perl",
  "Surrogates are disallowed": "Surrogater är otillåtna",
  "Tab": "Tabb",
  "Tags": "Taggar",
  "Target": "Mål",
  "Task {1}": "Task {1}",
  "Task Statistics": "Task Statistics",
  "Tasks": "Tasks",
  "Tells the engine not to stop after the first match has been found, but rather to continue until no more matches can be found.": "Tells the engine not to stop after the first match has been found, but rather to continue until no more matches can be found.",
  "Terminate any Transformation": "Terminera all Transformation",
  "Terminates any of the previous \\U or \\L transformations. This is a feature only available on regex101.com.": "Terminates any of the previous \\U or \\L transformations. This is a feature only available on regex101.com.",
  "Test passed": "Test passerade",
  "Test String": "Teststräng",
  "Test String Backtrack Indicator": "Test String Backtrack Indicator",
  "The `Fork Regex` button will create a copy of this document, but one that you may modify, without altering this entry.": "The `Fork Regex` button will create a copy of this document, but one that you may modify, without altering this entry.",
  "The ^ and $ anchors now match at the beginning/end of each line respectively, instead of beginning/end of the entire string.": "The ^ and $ anchors now match at the beginning/end of each line respectively, instead of beginning/end of the entire string.",
  "the above tag defines encoding for this document and is for Python 2.x compatibility": "the above tag defines encoding for this document and is for Python 2.x compatibility",
  "The assertion determines how you want to validate the target.": "The assertion determines how you want to validate the target.",
  "The character offset is too large": "The character offset is too large",
  "The condition is invalid (you may be referencing a non-existent subpattern or group)": "The condition is invalid (you may be referencing a non-existent subpattern or group)",
  "The DEFINE group is completely ignored by regex. It gets treated as a var name=\"value\", whereas you can recall the specific pattern for use via its name. Multiple patterns can be defined in the same DEFINE group.": "The DEFINE group is completely ignored by regex. It gets treated as a var name=\"value\", whereas you can recall the specific pattern for use via its name. Multiple patterns can be defined in the same DEFINE group.",
  "The engine will per default do lazy matching, instead of greedy. This means that a ? following a quantifier instead makes it greedy.": "The engine will per default do lazy matching, instead of greedy. This means that a ? following a quantifier instead makes it greedy.",
  "The entry has automatically been added to your account which means you can at any time delete this entry, make it private and much much more.": "The entry has automatically been added to your account which means you can at any time delete this entry, make it private and much much more.",
  "The escape sequence to match backspace is not supported in the selected flavor": "The escape sequence to match backspace is not supported in the selected flavor",
  "The goal is to provide a fun way to learn how to use regular expressions with real life tasks, and at the same time try to guide you to learn useful constructs and how the internals of the regex engine works.": "The goal is to provide a fun way to learn how to use regular expressions with real life tasks, and at the same time try to guide you to learn useful constructs and how the internals of the regex engine works.",
  "The internal recursion limit was reached.": "The internal recursion limit was reached.",
  "The match was halted because the offset does not point to the beginning of a valid UTF-16 character.": "The match was halted because the offset does not point to the beginning of a valid UTF-16 character.",
  "The match was halted because your expression contains a recursive loop. This means either that the whole pattern, or a subpattern, has been called recursively for the second time at the same position in the subject string.": "The match was halted because your expression contains a recursive loop. This means either that the whole pattern, or a subpattern, has been called recursively for the second time at the same position in the subject string.",
  "The owner of this permalink has locked it and as such, nobody but the creator may edit it.": "Ägaren av denna permalink har låst den, vilket medför att ingen annan än ägaren kan förändra något.",
  "The pattern is forced to become anchored at the start of the search or at the position of the last successful match, equal to a \\G.": "The pattern is forced to become anchored at the start of the search or at the position of the last successful match, equal to a \\G.",
  "The PCRE regex engine automatically applies some internal optimizations to regexes to avoid unnecessary backtracking. This modifier will disable that behavior, and thus the engine will backtrack until the previously matching instruction fails to do so.": "The PCRE regex engine automatically applies some internal optimizations to regexes to avoid unnecessary backtracking. This modifier will disable that behavior, and thus the engine will backtrack until the previously matching instruction fails to do so.",
  "The posix class is unknown/invalid": "Posix-klassen är okänd/ogiltig",
  "The preceding token is not quantifiable": "The preceding token is not quantifiable",
  "The quantifier range is out of order": "The quantifier range is out of order",
  "The quiz will utilize the PCRE regex engine, but many of the skills you learn will be transferable to other flavors.": "The quiz will utilize the PCRE regex engine, but many of the skills you learn will be transferable to other flavors.",
  "The range is invalid because either the left or right token is erroneous": "The range is invalid because either the left or right token is erroneous",
  "The range is invalid because the rightmost token is not rangeable": "The range is invalid because the rightmost token is not rangeable",
  "The regex debugger returned no data for the input you provided.": "The regex debugger returned no data for the input you provided.",
  "The regex debugger was unable to debug your pattern due to an error.": "The regex debugger was unable to debug your pattern due to an error.",
  "The regex did not match the subject string.": "The regex did not match the subject string.",
  "The result can be accessed through the `m`-variable.": "The result can be accessed through the `m`-variable.",
  "The result of the substitution is": "The result of the substitution is",
  "the string": "strängen",
  "The substituted value will be contained in the result variable": "The substituted value will be contained in the result variable",
  "The target specifies what it is you want to test. This determines in turn which assertions are possible": "The target specifies what it is you want to test. This determines in turn which assertions are possible",
  "The tasks will be unlocked one by one. When you finish task 1, task 2 will be unlocked, and so on.": "The tasks will be unlocked one by one. When you finish task 1, task 2 will be unlocked, and so on.",
  "The tasks will get progressively harder, and you will receive less and less hand-holding the further you progress.": "The tasks will get progressively harder, and you will receive less and less hand-holding the further you progress.",
  "The token is incomplete": "The token is incomplete",
  "The value specified is too large": "The value specified is too large",
  "Theme": "Tema",
  "There are no unit tests yet; add some!": "Det finns inte unit tester ännu; lägg till några!",
  "There are too many alternatives within the parent structure": "There are too many alternatives within the parent structure",
  "There does not seem to be anything here": "There does not seem to be anything here",
  "There is no need to save these urls as they are stored on your account and can be found on the account page. You may at any time delete or modify your library entry from there.": "There is no need to save these urls as they are stored on your account and can be found on the account page. You may at any time delete or modify your library entry from there.",
  "There was a problem trying to fetch the library data. Please try again later.": "There was a problem trying to fetch the library data. Please try again later.",
  "There was a problem when trying to fetch the details for this entry. Please try again later.": "There was a problem when trying to fetch the details for this entry. Please try again later.",
  "There was a problem while trying to submit your regex to the library. Please try again later.": "There was a problem while trying to submit your regex to the library. Please try again later.",
  "There was an error fetching the quiz data. Please try again later.": "There was an error fetching the quiz data. Please try again later.",
  "There was an error querying the server, please try again later:": "There was an error querying the server, please try again later:",
  "There was an error trying to save your regex. Please try again later.": "There was an error trying to save your regex. Please try again later.",
  "There was an error while fetching your account data. Please try again later.": "There was an error while fetching your account data. Please try again later.",
  "These flag modifiers act on the enclosed expression only. Equivalent to \"(?:(?imsxXU)...)\". You can also unset flags using a minus sign: (?-i), and can combine setting and unsetting flags, i.e. (?s-i) would set the single line flag and unset case insensitive.": "These flag modifiers act on the enclosed expression only. Equivalent to \"(?:(?imsxXU)...)\". You can also unset flags using a minus sign: (?-i), and can combine setting and unsetting flags, i.e. (?s-i) would set the single line flag and unset case insensitive.",
  "These flag modifiers act on the whole expression. You can also unset flags using a minus sign: (?-i), and can combine setting and unsetting flags, i.e. (?s-i) would set the single line flag and unset case insensitive.": "These flag modifiers act on the whole expression. You can also unset flags using a minus sign: (?-i), and can combine setting and unsetting flags, i.e. (?s-i) would set the single line flag and unset case insensitive.",
  "They are automatically saved as you change them and will be automatically loaded every time.": "They are automatically saved as you change them and will be automatically loaded every time.",
  "This allows regex to accept duplicate pattern names, however each capture group still has its own ID. Thus the two capture groups produce their own match instead of a single combined one.": "This allows regex to accept duplicate pattern names, however each capture group still has its own ID. Thus the two capture groups produce their own match instead of a single combined one.",
  "This allows regex to treat the string as UTF-16, specifically.": "This allows regex to treat the string as UTF-16, specifically.",
  "This allows regex to treat the string as UTF-32, specifically.": "This allows regex to treat the string as UTF-32, specifically.",
  "This allows regex to treat the string as UTF-8, specifically.": "This allows regex to treat the string as UTF-8, specifically.",
  "This allows regex to treat the string as UTF, be it 8, 16, or 32.": "This allows regex to treat the string as UTF, be it 8, 16, or 32.",
  "This capturing group can be referred to using the given name instead of a number.": "This capturing group can be referred to using the given name instead of a number.",
  "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?'name'...) and (?P<name>...).": "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?'name'...) and (?P<name>...).",
  "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?<name>...) and (?'name'...) when using a PCRE flavor.": "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?<name>...) and (?'name'...) when using a PCRE flavor.",
  "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?<name>...) and (?P<name>...).": "This capturing group can be referred to using the given name instead of a number. Alternative notation for (?<name>...) and (?P<name>...).",
  "This causes the regex to end successfully, skipping the rest of the pattern.": "This causes the regex to end successfully, skipping the rest of the pattern.",
  "This construct is similar to (...), but won't create a capture group.": "This construct is similar to (...), but won't create a capture group.",
  "This enables the dot (.) metacharacter to also match new lines. The string could be visualised as a single line input.": "This enables the dot (.) metacharacter to also match new lines. The string could be visualised as a single line input.",
  "This flag does not exist in Python2, as by default your script is parsed in ascii mode. In Python3 this will behave as described.": "This flag does not exist in Python2, as by default your script is parsed in ascii mode. In Python3 this will behave as described.",
  "This flag tells the engine to ignore all whitespace and allow for comments in the regex; also called verbose. Comments are indicated by a starting \"#\"-character. If you need to include a space character in your regex, it must now be escaped '\\ '.": "This flag tells the engine to ignore all whitespace and allow for comments in the regex; also called verbose. Comments are indicated by a starting \"#\"-character. If you need to include a space character in your regex, it must now be escaped '\\ '.",
  "This generator only supports substitution. Please update your regular expression accordingly": "This generator only supports substitution. Please update your regular expression accordingly",
  "This group does not allow any backtracking to occur": "This group does not allow any backtracking to occur",
  "This hyphen is treated literally, which might be confusing for others. Consider escaping it or placing at the start or end of the class!": "This hyphen is treated literally, which might be confusing for others. Consider escaping it or placing at the start or end of the class!",
  "This is an alternate syntax for \\k<name> or \\k'name' and it is valid for .NET. Note that you cannot use curly brackets (?{name}a+) to name a capture group in PCRE": "This is an alternate syntax for \\k<name> or \\k'name' and it is valid for .NET. Note that you cannot use curly brackets (?{name}a+) to name a capture group in PCRE",
  "This is an alternate syntax for \\k<name> or \\k{name}.": "This is an alternate syntax for \\k<name> or \\k{name}.",
  "This is necessary to avoid infinite loops with zero-width matches": "This is necessary to avoid infinite loops with zero-width matches",
  "This is to avoid confusion for anyone else viewing this permalink and to not corrupt the authors work.": "This is to avoid confusion for anyone else viewing this permalink and to not corrupt the authors work.",
  "This link will only be presented to you once! Save it if you want to be able to delete your regex in the future.": "This link will only be presented to you once! Save it if you want to be able to delete your regex in the future.",
  "This may be used to match the literal value of any metacharacter, or the / delimiter.": "This may be used to match the literal value of any metacharacter, or the / delimiter.",
  "This means that your pattern did match but there were no capturing groups that matched anything in the subject string.": "This means that your pattern did match but there were no capturing groups that matched anything in the subject string.",
  "This metacharacter matches any unicode newline character or sequence thereof. Its behavior can be controlled by (*UTF) pattern modifiers. In (*UTF8) mode, '\\R' will match the line separator, paragraph separator, carriage return, carriage return & newline sequence, line feed, vertical tab, form feed, and next line. When outside (*UTF8) mode, line and paragraph separators are not matched. Newline conventions can also be specified via (*BSR_ANYCRLF) and (*BSR_UNICODE)": "This metacharacter matches any unicode newline character or sequence thereof. Its behavior can be controlled by (*UTF) pattern modifiers. In (*UTF8) mode, '\\R' will match the line separator, paragraph separator, carriage return, carriage return & newline sequence, line feed, vertical tab, form feed, and next line. When outside (*UTF8) mode, line and paragraph separators are not matched. Newline conventions can also be specified via (*BSR_ANYCRLF) and (*BSR_UNICODE)",
  "This POSIX equivalent of the \"\\b\" word boundary is interpreted as": "This POSIX equivalent of the \"\\b\" word boundary is interpreted as",
  "This POSIX equivalent of the `\\\\b` word boundary is interpreted as {1}": "This POSIX equivalent of the `\\\\b` word boundary is interpreted as {1}",
  "This quiz used to be featured on this website many years ago, but was abandoned due to the vast amount of work to keep it updated. I have finally found the time to resurrect it, and ported it to the new website. It is based on the original quiz created by msmo many, many, years ago.": "This quiz used to be featured on this website many years ago, but was abandoned due to the vast amount of work to keep it updated. I have finally found the time to resurrect it, and ported it to the new website. It is based on the original quiz created by msmo many, many, years ago.",
  "This script is unknown/invalid": "This script is unknown/invalid",
  "This sets the convention for newline matching to '\\r\\n','\\r', or '\\n' for things like the '\\R' metacharacter.": "This sets the convention for newline matching to '\\r\\n','\\r', or '\\n' for things like the '\\R' metacharacter.",
  "This sets the convention for newline matching to any unicode newline character or sequence thereof, for things like the '\\R' metacharacter.": "This sets the convention for newline matching to any unicode newline character or sequence thereof, for things like the '\\R' metacharacter.",
  "This setting adjusts the site-wide theme.": "This setting adjusts the site-wide theme.",
  "This setting affects how long the matcher will try to match your regex before it decides to give up.": "This setting affects how long the matcher will try to match your regex before it decides to give up.",
  "This setting determines whether groups in your regex, which did not match anything in the subject string, should be included in the results or not.": "This setting determines whether groups in your regex, which did not match anything in the subject string, should be included in the results or not.",
  "This token can not be used in a lookbehind as it makes it non-fixed width": "This token can not be used in a lookbehind as it makes it non-fixed width",
  "This token does nothing without a corresponding open quote tag (\\Q). If you meant to match a literal `E`, remove the backslash": "This token does nothing without a corresponding open quote tag (\\Q). If you meant to match a literal `E`, remove the backslash",
  "This token has no special meaning and has thus been rendered erroneous": "This token has no special meaning and has thus been rendered erroneous",
  "This token is not supported in the selected flavor": "Det finns inte stöd för denna symbol i den valda språkvarianten",
  "This token must be escaped when the `u` flag is enabled unless they form a valid quantifier": "This token must be escaped when the `u` flag is enabled unless they form a valid quantifier",
  "This token references a non-existent or invalid subpattern": "This token references a non-existent or invalid subpattern",
  "this verb causes the match to end successfully, skipping the remainder of the pattern": "this verb causes the match to end successfully, skipping the remainder of the pattern",
  "this verb causes the match to fail at the current starting position in the subject if the rest of the pattern does not match": "this verb causes the match to fail at the current starting position in the subject if the rest of the pattern does not match",
  "this verb disables the internal `auto-possessification` optimization in PCRE": "this verb disables the internal `auto-possessification` optimization in PCRE",
  "This verb does not allow regex to continue parsing after a matching failure, even if there are other matching strings ahead, and regardless of how many successful matches are before the failure.": "This verb does not allow regex to continue parsing after a matching failure, even if there are other matching strings ahead, and regardless of how many successful matches are before the failure.",
  "This verb is unknown or invalid": "This verb is unknown or invalid",
  "This verb must be placed at the start of the regex": "This verb must be placed at the start of the regex",
  "this verb sets the match limit (max iterations) for the pattern": "this verb sets the match limit (max iterations) for the pattern",
  "this verb sets the recursion limit (max depth) for the pattern": "this verb sets the recursion limit (max depth) for the pattern",
  "This will match only at quickrefStylesthe starting point of the search or the position the previous successful match ended. Useful with the /g flag, or when you are only trying to match after a certain point in a string.": "This will match only at quickrefStylesthe starting point of the search or the position the previous successful match ended. Useful with the /g flag, or when you are only trying to match after a certain point in a string.",
  "This will return a portion of the source string that follows the match.": "This will return a portion of the source string that follows the match.",
  "This will return a portion of the source string that precedes the match.": "This will return a portion of the source string that precedes the match.",
  "This will return a string with the complete match result from the regex.": "This will return a string with the complete match result from the regex.",
  "This will return a string with the complete match result if '\\g<0>' is used, or any desired capture group number if '0' is replaced with the ID of that capture group": "This will return a string with the complete match result if '\\g<0>' is used, or any desired capture group number if '0' is replaced with the ID of that capture group",
  "This will return a string with the contents from the capture group named `foo`. Any name can be used as long as it is defined in the regex. This syntax is made up and specific to only Regex101. If the J-flag is specified, content will be taken from the first capture group with the same name.": "This will return a string with the contents from the capture group named `foo`. Any name can be used as long as it is defined in the regex. This syntax is made up and specific to only Regex101. If the J-flag is specified, content will be taken from the first capture group with the same name.",
  "This will return a string with the contents from the first capture group. The number, in this case 1, can be any number as long as it corresponds to a valid capture group.": "This will return a string with the contents from the first capture group. The number, in this case 1, can be any number as long as it corresponds to a valid capture group.",
  "time": "time",
  "Timeout": "Timeout",
  "times": "times",
  "Title": "Title",
  "Title of regular expression": "Title of regular expression",
  "Tools": "Tools",
  "Transforms text to lowercase until either end of string or a \\E is encountered. This is a feature only available on regex101.com.": "Transforms text to lowercase until either end of string or a \\E is encountered. This is a feature only available on regex101.com.",
  "Transforms text to uppercase until either end of string or a \\E is encountered. This is a feature only available on regex101.com.": "Transforms text to uppercase until either end of string or a \\E is encountered. This is a feature only available on regex101.com.",
  "Try launching the debugger to find out why.": "Try launching the debugger to find out why.",
  "Twitter": "Twitter",
  "UCP (Unicode Character Properties) allows regex to treat the string as unicode, which means that \\d and \\w are extended to match other unicode characters than [0-9] and [a-zA-Z0-9_].": "UCP (Unicode Character Properties) allows regex to treat the string as unicode, which means that \\d and \\w are extended to match other unicode characters than [0-9] and [a-zA-Z0-9_].",
  "Unable to fetch detailed task statistics. Please try again later.": "Unable to fetch detailed task statistics. Please try again later.",
  "Unable to fetch versions": "Unable to fetch versions",
  "Undescribed specific verb; No description for it yet (nothing's perfect)": "Undescribed specific verb; No description for it yet (nothing's perfect)",
  "Unfavorite Regex": "Unfavorite Regex",
  "Unfortunately it seems your browser does not meed the criteria to properly render and utilize this website.": "Unfortunately it seems your browser does not meed the criteria to properly render and utilize this website.",
  "Ungreedy": "Ungreedy",
  "Unicode": "Unicode",
  "Unicode Character Table": "Unicode Character Table",
  "Unicode newlines": "Unicode newlines",
  "Unicode property or script category": "Unicode property or script category",
  "Unicode property X": "Unicode property X",
  "Unit Tests": "Unit Tests",
  "Unit Tests {1}": "Unit Tests {1}",
  "unlimited": "unlimited",
  "Unmatched parenthesis": "Unmatched parenthesis",
  "Unspecified unit test": "Unspecified unit test",
  "Update": "Uppdatera",
  "Update Library Entry": "Uppdatera bibliotekspost",
  "Update Regex": "Uppdatera Regex",
  "Update Regular Expression": "Uppdatera Regex",
  "Upload to Library": "Ladda upp till Bibliotek",
  "uppercase": "uppercase",
  "Uppercase letters": "Versaler",
  "Uppercase Transformation": "Uppercase Transformation",
  "User Distribution (%)": "User Distribution (%)",
  "Usually referred to as a `backreference`, this will match a repeat of the text captured in a previous set of parentheses. To reduce ambiguity one may also use `\\gn`, or `\\g{n}` where n is a digit.": "Usually referred to as a `backreference`, this will match a repeat of the text captured in a previous set of parentheses. To reduce ambiguity one may also use `\\gn`, or `\\g{n}` where n is a digit.",
  "Values below {1} are not recommended. Use at your own discretion.": "Values below {1} are not recommended. Use at your own discretion.",
  "verb synonymous with {1}. Forces a matching failure at the given position in the pattern": "verb synonymous with {1}. Forces a matching failure at the given position in the pattern",
  "Version {1}": "Version {1}",
  "Vertical whitespace character": "Vertical whitespace character",
  "View Explanation": "Visa Förklaring",
  "View Match Information": "Visa Matchinformation",
  "View Regex Quick Reference": "Visa Snabbreferens",
  "Visible characters": "Synliga tecken",
  "Visible characters (not space)": "Synliga tecken (ej blanktecken)",
  "Visible punctuation characters": "Visible punctuation characters",
  "Welcome to the RegEx101 regex quiz.": "Welcome to the RegEx101 regex quiz.",
  "Whitespace": "Blanktecken",
  "Whole match is {1} and its start/end positions can be obtained via {2} and {3}": "Whole match is {1} and its start/end positions can be obtained via {2} and {3}",
  "Wiki": "Wiki",
  "Wiki (Info & FAQ)": "Wiki (",
  "with no special consideration for the \\r\\n sequence": "with no special consideration for the \\r\\n sequence",
  "Word characters": "Ord-tecken",
  "Wrap Long Lines": "Wrappa Långa Rader",
  "Write": "Skriv",
  "Yes, delete": "Ja, radera",
  "You can manually specify the number of replacements by changing the 4th argument": "You can manually specify the number of replacements by changing the 4th argument",
  "You can not create a range with a shorthand escape sequences": "You can not create a range with a shorthand escape sequences",
  "You can not set both the `a` and `u` flag simultaneously": "You can not set both the `a` and `u` flag simultaneously",
  "You can use hexadecimals to insert any character into the replacement string using the standard syntax.": "You can use hexadecimals to insert any character into the replacement string using the standard syntax.",
  "You can't do that!": "Du kan inte göra det!",
  "You have made changes since you last saved, leaving the website will result in a permanent loss of the data.": "Du har gjort ändringar sedan du senast sparade. Om ni lämnar sidan förloras all data permanent.",
  "You have no tags yet, add some and organize your entries!": "Ni har inga taggar ännu, lägg till några och organisera era poster!",
  "You have not added anything to your favorites yet.": "Ni har inte lagt till några favoriter ännu.",
  "You have not created anything yourself yet.": "Ni har inte skapat något ännu.",
  "You have not submitted anything to the library yet.": "Ni har inte postat något till biblioteket ännu.",
  "You must be signed in to vote": "Du behöver vara inloggad för att få rösta",
  "You need to be signed in to participate in the regex quiz. You can do so by clicking the button in the left sidebar.": "You need to be signed in to participate in the regex quiz. You can do so by clicking the button in the left sidebar.",
  "You will find a link to your library entry here:": "Ni hittar en länk till er post här:",
  "Your entry has successfully been submitted to the library": "Er post har sparats i biblioteket",
  "Your expression caused an unhandled error:": "Ditt uttryck orsakade ett ohanterat fel:",
  "Your expression took too long to finish and was terminated. Please increase the timeout and try again.": "Ditt uttryck tog för lång tid för att avsluta och avbröts. Var god öka exekveringstiden och försök igen.",
  "Your history is empty.": "Din historik är tom.",
  "Your pattern contains one or more errors, please see the explanation section above.": "Ditt uttryck innehåller ett eller fler fel, var god se förklaringen i sektionen ovan.",
  "Your regex has been permanently saved and may be accessed with this link by anybody you give it to.": "Din regex har blivit sparad tills vidare och ni, samt alla ni ger den till, kan komma åt den via den här länken.",
  "Your regular expression does not match the subject string.": "Ditt regex matchade inte strängen.",
  "Your search did not match anything": "Din sökning gav inget resultat",
  "Your shortest solution thus far is {1} characters long. The overall shortest solution is {2} characters long.": "Your shortest solution thus far is {1} characters long. The overall shortest solution is {2} characters long.",
  "Your solution with a score of {1} is better than {2}% of all submissions.": "Your solution with a score of {1} is better than {2}% of all submissions.",
  "Your tag filtration returned no results.": "Din taggfiltrering gav inget resultat.",
  "Your workspace has been forked into a separate entry that only you can modify, which you can find here": "Your workspace has been forked into a separate entry that only you can modify, which you can find here",
  "zero": "noll",
  "Zero or more of a": "Noll eller fler av a",
  "Zero or one of a": "Noll eller fler av en"
}